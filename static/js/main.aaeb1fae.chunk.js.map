{"version":3,"sources":["modules/SignUp/SignUp.module.css","modules/SignIn/SignIn.module.css","images/padlock.svg","components/PrivateRoute.js","components/StyledLogo.js","components/StyledLabel.js","components/StyledTitle.js","components/StyledInput.js","components/StyledLink.js","components/StyledCopyright.js","modules/SignIn/SignIn.js","modules/SignUp/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PrivateRoute","props","token","localStorage","getItem","Button","variant","color","onClick","removeItem","window","location","assign","to","StyledLogo","styled","div","icon","StyledLabel","label","StyledTitle","h2","StyledInput","input","halfWidth","validation","console","log","placeholder","StyledLink","a","StyledCopyright","SignIn","useState","isRemember","setIsRemember","email","setEmail","defaultEmail","setDefaultEmail","password","setPassword","defaultPassword","setDefaultPassword","validationEmail","setValidationEmail","validationPassword","setValidationPassword","savedUsers","localCurrentUSer","JSON","parse","emailRegexp","passwordRegexp","useEffect","match","className","style","wrapper","logo","onChange","e","target","value","type","htmlFor","name","id","checked","sign_in_btn","currentId","i","user","push","getUsers","some","el","forEach","currentUser","firstName","lastName","localCurrentUser","stringify","setItem","alert","link_row","href","SignUp","setFirstName","setLastName","newsletter","setNewsletter","validationFirstName","setValidationFirstName","validationLastName","setValidationLastName","nameRegexp","resetInputs","name_row","sign_up_btn","getId","savedUser","App","exact","path","render","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aaeb1fae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SignUp_wrapper__7NZEm\",\"sign_up_btn\":\"SignUp_sign_up_btn__cAo3f\",\"link_row\":\"SignUp_link_row__1LiSD\",\"name_row\":\"SignUp_name_row__VtC1V\",\"logo\":\"SignUp_logo__3t2LS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SignIn_wrapper__2Tmot\",\"sign_in_btn\":\"SignIn_sign_in_btn__3Ap_8\",\"link_row\":\"SignIn_link_row__19fHH\",\"logo\":\"SignIn_logo__1Dpd7\"};","module.exports = __webpack_public_path__ + \"static/media/padlock.d964e0b3.svg\";","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst PrivateRoute = (props) => {\r\n    const signOut = () => {\r\n        localStorage.removeItem(\"token\");\r\n        window.location.assign(\"../signin\");\r\n    };\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n        return (\r\n            <>\r\n                <Route {...props}>\r\n                    <h3>Hello, {token}!</h3>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={signOut}\r\n                    >\r\n                        SIGN OUT\r\n                    </Button>\r\n                </Route>\r\n            </>\r\n        );\r\n    }\r\n    return <Redirect to=\"../signin\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport icon from \"../images/padlock.svg\";\r\n\r\nconst StyledLogo = styled.div`\r\n    background-color: #f48fb2;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    background-image: url(\"${icon}\");\r\n    background-size: 50% 50%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n`;\r\n\r\nexport default StyledLogo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabel = styled.label`\r\n    color: #fff;\r\n    margin-right: auto;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport default StyledLabel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTitle = styled.h2`\r\n    color: #fff;\r\n    font-size: 20px;\r\n`;\r\n\r\nexport default StyledTitle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n    width: ${(props) => (props.halfWidth ? \"calc(50% - 10px)\" : \"100%\")};\r\n    height: 40px;\r\n    border: ${(props) => {\r\n        if (props.validation === \"default\") {\r\n            console.log(props.validation);\r\n            return \"1px solid #404040\";\r\n        } else if (props.validation === \"valid\") {\r\n            console.log(props.validation);\r\n            return \"4px solid green\";\r\n        } else if (props.validation === \"invalid\") {\r\n            console.log(props.validation);\r\n            return \"4px solid red\";\r\n        }\r\n    }};\r\n    border-radius: 3px;\r\n    background-color: #000;\r\n    padding: 5px 10px;\r\n    color: #fff;\r\n    &:placeholder {\r\n        content: \"${(props) => props.placeholder}\";\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport default StyledInput;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLink = styled.a`\r\n    color: #6d98b9;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport default StyledLink;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCopyright = styled.div`\r\n    color: #fff;\r\n    font-size: 12px;\r\n`;\r\n\r\nexport default StyledCopyright;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport style from \"./SignIn.module.css\";\r\n\r\nimport StyledLogo from \"../../components/StyledLogo\";\r\nimport StyledLabel from \"../../components/StyledLabel\";\r\nimport StyledTitle from \"../../components/StyledTitle\";\r\nimport StyledInput from \"../../components/StyledInput\";\r\nimport StyledLink from \"../../components/StyledLink\";\r\nimport StyledCopyright from \"../../components/StyledCopyright\";\r\n\r\nconst SignIn = () => {\r\n    const [isRemember, setIsRemember] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [defaultEmail, setDefaultEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [defaultPassword, setDefaultPassword] = useState(\"\");\r\n    const [validationEmail, setValidationEmail] = useState(\"default\");\r\n    const [validationPassword, setValidationPassword] = useState(\"default\");\r\n\r\n    const savedUsers = [];\r\n    const localCurrentUSer = JSON.parse(localStorage.getItem(\"isRemember\"));\r\n    const emailRegexp = /\\S{2,}@{1}\\S{2,}.\\S{2,}/i;\r\n    const passwordRegexp = /(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}/;\r\n\r\n    const getUsers = () => {\r\n        const currentId = localStorage.getItem(\"currentId\");\r\n        for (let i = 0; i <= currentId; i++) {\r\n            let user = localStorage.getItem(i);\r\n            savedUsers.push(JSON.parse(user));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (localCurrentUSer) {\r\n            console.log(localCurrentUSer);\r\n            setDefaultEmail(localCurrentUSer.email);\r\n            setDefaultPassword(localCurrentUSer.password);\r\n        }\r\n    }, [localCurrentUSer]);\r\n\r\n    useEffect(() => {\r\n        setEmail(defaultEmail);\r\n    }, [defaultEmail]);\r\n\r\n    useEffect(() => {\r\n        setPassword(defaultPassword);\r\n    }, [defaultPassword]);\r\n\r\n    useEffect(() => {\r\n        if (email.match(emailRegexp)) {\r\n            setValidationEmail(\"valid\");\r\n        } else if (email === \"\") {\r\n            setValidationEmail(\"default\");\r\n        } else setValidationEmail(\"invalid\");\r\n    }, [email]);\r\n\r\n    useEffect(() => {\r\n        if (password.match(passwordRegexp)) {\r\n            setValidationPassword(\"valid\");\r\n        } else if (password === \"\") {\r\n            setValidationPassword(\"default\");\r\n        } else setValidationPassword(\"invalid\");\r\n    }, [password]);\r\n\r\n    const checkUser = () => {\r\n        localStorage.removeItem(\"isRemember\");\r\n        getUsers();\r\n        if (savedUsers.some((el) => el.email === email)) {\r\n            savedUsers.forEach((el) => {\r\n                if (el.email === email) {\r\n                    if (el.password === password) {\r\n                        const currentUser = {\r\n                            firstName: el.firstName,\r\n                            lastName: el.lastName,\r\n                            email: el.email,\r\n                            password: el.password,\r\n                        };\r\n                        const localCurrentUser = JSON.stringify(currentUser);\r\n\r\n                        localStorage.setItem(\"token\", el.firstName);\r\n                        window.location.assign(\"../main\");\r\n\r\n                        if (isRemember) {\r\n                            localStorage.setItem(\r\n                                \"isRemember\",\r\n                                localCurrentUser\r\n                            );\r\n                        }\r\n                    } else alert(\"Wrong password\");\r\n                } else;\r\n            });\r\n        } else alert(\"User not find!\");\r\n    };\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.logo}>\r\n                <StyledLogo />\r\n                <StyledTitle>Sign in</StyledTitle>\r\n            </div>\r\n            <StyledInput\r\n                placeholder={\"Email Address *\"}\r\n                validation={validationEmail}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n            />\r\n            <StyledInput\r\n                placeholder={\"Password *\"}\r\n                type=\"password\"\r\n                validation={validationPassword}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value={password}\r\n            />\r\n            <StyledLabel htmlFor=\"rememberMe\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"rememberMe\"\r\n                    id=\"rememberMe\"\r\n                    onChange={(e) => setIsRemember(e.target.checked)}\r\n                />\r\n                Remember me\r\n            </StyledLabel>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={style.sign_in_btn}\r\n                onClick={checkUser}\r\n            >\r\n                SIGN IN\r\n            </Button>\r\n            <div className={style.link_row}>\r\n                <StyledLink href=\"/forgot\">Forgot password?</StyledLink>\r\n                <StyledLink href=\"/signup\">\r\n                    Dont have an account? Sign Up\r\n                </StyledLink>\r\n            </div>\r\n            <StyledCopyright>\r\n                Copyright &copy; Your Website 2020\r\n            </StyledCopyright>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport style from \"./SignUp.module.css\";\r\n\r\nimport StyledLogo from \"../../components/StyledLogo\";\r\nimport StyledLabel from \"../../components/StyledLabel\";\r\nimport StyledTitle from \"../../components/StyledTitle\";\r\nimport StyledInput from \"../../components/StyledInput\";\r\nimport StyledLink from \"../../components/StyledLink\";\r\nimport StyledCopyright from \"../../components/StyledCopyright\";\r\n\r\nlet id = 0;\r\n\r\nconst SignUp = () => {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newsletter, setNewsletter] = useState(false);\r\n    const [validationEmail, setValidationEmail] = useState(\"default\");\r\n    const [validationPassword, setValidationPassword] = useState(\"default\");\r\n    const [validationFirstName, setValidationFirstName] = useState(\"default\");\r\n    const [validationLastName, setValidationLastName] = useState(\"default\");\r\n\r\n    const user = {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        newsletter,\r\n    };\r\n\r\n    const emailRegexp = /\\S{2,}@{1}\\S{2,}.\\S{2,}/i;\r\n    const passwordRegexp = /(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}/;\r\n    const nameRegexp = /[a-zA-Z]{3,}/i;\r\n\r\n    const getId = () => {\r\n        const currentId = localStorage.getItem(\"currentId\");\r\n        if (currentId) id = +currentId + 1;\r\n    };\r\n\r\n    const signUp = () => {\r\n        if (firstName && lastName && email && password) {\r\n            getId();\r\n            const savedUser = JSON.stringify(user);\r\n            localStorage.setItem(`${id}`, savedUser);\r\n            localStorage.setItem(\"currentId\", id);\r\n            id++;\r\n            resetInputs();\r\n            window.location.assign(\"../signin\");\r\n        }\r\n    };\r\n\r\n    const resetInputs = () => {\r\n        setFirstName(\"\");\r\n        setLastName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setNewsletter(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (email.match(emailRegexp)) {\r\n            setValidationEmail(\"valid\");\r\n        } else if (email === \"\") {\r\n            setValidationEmail(\"default\");\r\n        } else setValidationEmail(\"invalid\");\r\n    }, [email]);\r\n\r\n    useEffect(() => {\r\n        if (password.match(passwordRegexp)) {\r\n            setValidationPassword(\"valid\");\r\n        } else if (password === \"\") {\r\n            setValidationPassword(\"default\");\r\n        } else setValidationPassword(\"invalid\");\r\n    }, [password]);\r\n\r\n    useEffect(() => {\r\n        if (firstName.match(nameRegexp)) {\r\n            setValidationFirstName(\"valid\");\r\n        } else if (firstName === \"\") {\r\n            setValidationFirstName(\"default\");\r\n        } else setValidationFirstName(\"invalid\");\r\n    }, [firstName]);\r\n\r\n    useEffect(() => {\r\n        if (lastName.match(nameRegexp)) {\r\n            setValidationLastName(\"valid\");\r\n        } else if (lastName === \"\") {\r\n            setValidationLastName(\"default\");\r\n        } else setValidationLastName(\"invalid\");\r\n    }, [lastName]);\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.logo}>\r\n                <StyledLogo />\r\n                <StyledTitle>Sign up</StyledTitle>\r\n            </div>\r\n            <div className={style.name_row}>\r\n                <StyledInput\r\n                    placeholder={\"First name *\"}\r\n                    halfWidth\r\n                    value={firstName}\r\n                    validation={validationFirstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n                <StyledInput\r\n                    placeholder={\"Last name *\"}\r\n                    halfWidth\r\n                    value={lastName}\r\n                    validation={validationLastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n            </div>\r\n            <StyledInput\r\n                placeholder={\"Email Address *\"}\r\n                value={email}\r\n                validation={validationEmail}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <StyledInput\r\n                placeholder={\"Password *\"}\r\n                type=\"password\"\r\n                value={password}\r\n                validation={validationPassword}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <StyledLabel htmlFor=\"newsletter\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"newsletter\"\r\n                    id=\"newsletter\"\r\n                    checked={newsletter}\r\n                    onChange={(e) => setNewsletter(e.target.checked)}\r\n                />{\" \"}\r\n                I want to receive inspiration, marketing promotions and updates\r\n                via email\r\n            </StyledLabel>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={style.sign_up_btn}\r\n                onClick={signUp}\r\n            >\r\n                SIGN UP\r\n            </Button>\r\n            <div className={style.link_row}>\r\n                <StyledLink href=\"/signin\">\r\n                    Already have an account? Sign in\r\n                </StyledLink>\r\n            </div>\r\n            <StyledCopyright>\r\n                Copyright &copy; Your Website 2020\r\n            </StyledCopyright>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport SignIn from \"./modules/SignIn/SignIn\";\nimport SignUp from \"./modules/SignUp/SignUp\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route exact path=\"/signin\">\n                        <SignIn />\n                    </Route>\n                    <Route exact path=\"/signup\">\n                        <SignUp />\n                    </Route>\n                    <Route exact path=\"/forgot\">\n                        <h3>\n                            If you forgot your password, please write it next\n                            time. Now you must sign up one more time.\n                        </h3>\n                        <Link to=\"/signup\">Sign up</Link>\n                    </Route>\n                    <PrivateRoute exact path=\"/main\" />\n\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={() => <Redirect to=\"/main\" />}\n                    ></Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}